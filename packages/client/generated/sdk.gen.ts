// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { GetSubjectsData, GetSubjectsError, GetSubjectsResponse, PostSubjectsData, PostSubjectsError, PostSubjectsResponse, DeleteSubjectsByIdData, DeleteSubjectsByIdError, DeleteSubjectsByIdResponse, GetSubjectsByIdData, GetSubjectsByIdError, GetSubjectsByIdResponse, PutSubjectsByIdData, PutSubjectsByIdError, PutSubjectsByIdResponse, GetHealthData } from './types.gen';

export const client = createClient(createConfig());

/**
 * Get all subjects
 * Retrieves a list of all subjects. The response includes each subject's ID and associated data.
 */
export const getSubjects = <ThrowOnError extends boolean = false>(options?: Options<GetSubjectsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetSubjectsResponse, GetSubjectsError, ThrowOnError>({
        ...options,
        url: '/subjects/'
    });
};

/**
 * Create a new subject
 * Creates a new subject with the provided data. Returns the created subject object including its generated ID and metadata.
 */
export const postSubjects = <ThrowOnError extends boolean = false>(options: Options<PostSubjectsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostSubjectsResponse, PostSubjectsError, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/subjects/'
    });
};

/**
 * Delete a subject
 * Deletes an existing subject by its ID. Returns a success confirmation.
 */
export const deleteSubjectsById = <ThrowOnError extends boolean = false>(options: Options<DeleteSubjectsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteSubjectsByIdResponse, DeleteSubjectsByIdError, ThrowOnError>({
        ...options,
        url: '/subjects/{id}'
    });
};

/**
 * Get a subject by ID
 * Retrieves a specific subject by its unique identifier. Returns the complete subject data if found.
 */
export const getSubjectsById = <ThrowOnError extends boolean = false>(options: Options<GetSubjectsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetSubjectsByIdResponse, GetSubjectsByIdError, ThrowOnError>({
        ...options,
        url: '/subjects/{id}'
    });
};

/**
 * Update a subject
 * Updates an existing subject with the provided data. Returns the updated subject object.
 */
export const putSubjectsById = <ThrowOnError extends boolean = false>(options: Options<PutSubjectsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutSubjectsByIdResponse, PutSubjectsByIdError, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/subjects/{id}'
    });
};

/**
 * Health check
 * Check the health of the API
 */
export const getHealth = <ThrowOnError extends boolean = false>(options?: Options<GetHealthData, ThrowOnError>) => {
    return (options?.client ?? client).get<unknown, unknown, ThrowOnError>({
        ...options,
        url: '/health'
    });
};